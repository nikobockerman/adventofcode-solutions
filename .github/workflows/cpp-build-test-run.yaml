name: C++ build, test and run
on:
  workflow_call:
    inputs:
      homebrew-downloads-hash-from-prepare-macos:
        description: Hash of cached Homebrew downloads on MacOS
        required: true
        type: string
      homebrew-downloads-hash-from-prepare-ubuntu:
        description: Hash of cached Homebrew downloads on Ubuntu
        required: true
        type: string
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build-test-run:
    strategy:
      matrix:
        include:
          - name: Ubuntu GCC Release
            os: ubuntu-24.04
            homebrew-downloads-hash-from-prepare: ${{ inputs.homebrew-downloads-hash-from-prepare-ubuntu }}
            workflowPreset: ci-ubuntu-gcc-release

          - name: Ubuntu GCC Debug
            os: ubuntu-24.04
            homebrew-downloads-hash-from-prepare: ${{ inputs.homebrew-downloads-hash-from-prepare-ubuntu }}
            workflowPreset: ci-ubuntu-gcc-debug

          - name: Ubuntu Clang Release
            os: ubuntu-24.04
            homebrew-downloads-hash-from-prepare: ${{ inputs.homebrew-downloads-hash-from-prepare-ubuntu }}
            workflowPreset: ci-ubuntu-clang-release

          - name: Ubuntu Clang Debug
            os: ubuntu-24.04
            homebrew-downloads-hash-from-prepare: ${{ inputs.homebrew-downloads-hash-from-prepare-ubuntu }}
            workflowPreset: ci-ubuntu-clang-debug

          - name: MacOS Clang Release
            os: macos-15
            homebrew-downloads-hash-from-prepare: ${{ inputs.homebrew-downloads-hash-from-prepare-macos }}
            workflowPreset: ci-macos-clang-release

          - name: MacOS Clang Debug
            os: macos-15
            homebrew-downloads-hash-from-prepare: ${{ inputs.homebrew-downloads-hash-from-prepare-macos }}
            workflowPreset: ci-macos-clang-debug

    name: ${{ matrix.name }} - Build + test + run
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true

      - name: Setup homebrew packages
        uses: ./.github/actions/homebrew-packages-setup
        with:
          cache-mode: use
          downloads-hash-from-prepare: ${{ matrix.homebrew-downloads-hash-from-prepare }}

      - name: Setup CMake project
        uses: ./.github/actions/cmake-project-setup

      - if: matrix.os == 'ubuntu-24.04'
        name: Specify HOMEBREW_PREFIX
        run: |
          brewPrefix=$(brew --prefix)
          echo "HOMEBREW_PREFIX=${brewPrefix}" | tr -d '\n' >> "${GITHUB_ENV}"
        shell: bash

      - if: matrix.os == 'ubuntu-24.04' && contains(matrix.workflowPreset, '-gcc-')
        name: "Add brew binutils to path"
        run: |
          echo "${HOMEBREW_PREFIX}/opt/binutils/bin" >> "${GITHUB_PATH}"
        shell: bash

      - name: Run CMake workflow
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
        with:
          cmakeListsTxtPath: solvers/cpp/CMakeLists.txt
          workflowPreset: ${{ matrix.workflowPreset }}

      - name: Restore aoc-main mise project
        uses: ./.github/actions/mise-project-setup
        with:
          directory: aoc-main

      - name: Restore aoc-main uv project
        uses: ./.github/actions/uv-project-setup
        with:
          directory: aoc-main

      - name: Run all solutions
        env:
          AOC_CPP_WORKFLOW_PRESET: ${{ matrix.workflowPreset }}
        run: mise run aoc:all -- --solver cpp -vv
